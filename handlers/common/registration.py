import logging
from aiogram import Router, F
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardRemove

from repositories import user_repo

router = Router()
log = logging.getLogger(__name__)

class ProviderRegistration(StatesGroup):
    entering_name = State()

def get_client_main_menu() -> InlineKeyboardMarkup:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞."""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìã –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª–∏", callback_data="show_cars")],
        [InlineKeyboardButton(text="ü§ù –°—Ç–∞—Ç—å –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–º", callback_data="register_provider")]
    ])

def get_provider_main_menu() -> InlineKeyboardMarkup:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞."""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üöó –î–æ–±–∞–≤–∏—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª—å", callback_data="add_vehicle")],
        [InlineKeyboardButton(text="üìã –ú–æ–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏", callback_data="list_my_vehicles")]
    ])

@router.message(Command("start"))
async def cmd_start(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start. –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –µ–≥–æ —Ä–æ–ª–∏.
    """
    await state.clear()
    user = await user_repo.get_or_create_user(message.from_user.id)

    if not user:
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        return

    role = user.get('role')
    if role == 'provider':
        await message.answer(f"–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, –ø–æ—Å—Ç–∞–≤—â–∏–∫ —É—Å–ª—É–≥! –í–∞—à–µ –º–µ–Ω—é:", reply_markup=get_provider_main_menu())
    elif role == 'admin':
        # TODO: –î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω—Å–∫–æ–µ –º–µ–Ω—é
        await message.answer(f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!", reply_markup=get_provider_main_menu())
    else: # client
        await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª–∏ –∏–ª–∏ —Å—Ç–∞—Ç—å –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–º —É—Å–ª—É–≥.",
                             reply_markup=get_client_main_menu())

@router.callback_query(F.data == "register_provider")
async def start_provider_registration(callback: CallbackQuery, state: FSMContext):
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç FSM –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞."""
    await state.set_state(ProviderRegistration.entering_name)
    await callback.message.edit_text("–û—Ç–ª–∏—á–Ω–æ! –ß—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –∫–∞–∫ –ø–æ—Å—Ç–∞–≤—â–∏–∫, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏.")
    await callback.answer()

@router.message(ProviderRegistration.entering_name)
async def process_provider_name(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∏–º—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞, –æ–±–Ω–æ–≤–ª—è–µ—Ç —Ä–æ–ª—å –∏ —Å–æ–∑–¥–∞–µ—Ç –ø—Ä–æ—Ñ–∏–ª—å."""
    provider_name = message.text
    user = await user_repo.get_user_by_tg_id(message.from_user.id)

    if not user:
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ /start", reply_markup=ReplyKeyboardRemove())
        await state.clear()
        return

    # –û–±–Ω–æ–≤–ª—è–µ–º —Ä–æ–ª—å –Ω–∞ 'provider'
    await user_repo.set_user_role(user['id'], 'provider')

    # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
    provider_profile = await user_repo.create_provider_profile(user['id'], provider_name)

    if not provider_profile:
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π.", reply_markup=ReplyKeyboardRemove())
        await state.clear()
        return

    await message.answer(
        f"–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –∫–∞–∫ –ø–æ—Å—Ç–∞–≤—â–∏–∫ —É—Å–ª—É–≥ –ø–æ–¥ –∏–º–µ–Ω–µ–º '{provider_name}'.\n\n"
        "–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–ª—è—Ç—å —Å–≤–æ–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏.",
        reply_markup=get_provider_main_menu()
    )
    await state.clear()